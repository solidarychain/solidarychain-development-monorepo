{
  "name": "@solidary-chain/lerna-monorepo",
  "version": "0.1.0",
  "description": "Bootstrap project for Chaincodes attributesDb",
  "files": [
    "dist/*"
  ],
  "scripts": {
    "start": "npm run env:restart && npm run cc:start -- solidary-chain-chaincode",
    "seed": "./seed.sh",
    "install": "npm-run-all -s lerna:install",
    "build": "node ./update-paths.js",
    "env:restart": "hurl new",
    "test": "npm-run-all -s lerna:test",
    "env:clean": "hurl clean",
    "cc:start": "f() { npm run cc:package -- $1 org1; npm run cc:install $1; }; f",
    "cc:upgrade": "f() { npm run cc:package -- $1 org1; hurl upgrade $1 node $2  -P ./chaincode-$1; }; f",
    "cc:start:debug": "f() { rm ./chaincode-$1 -r; npm run cc:package -- $1 org1; npm run cc:install:debug $1; }; f",
    "===================PACKAGES===================": "====================================================================",
    "pkg:graphql:build": "npx lerna run build --scope @solidary-chain/server-graphql --stream",
    "pkg:graphql:dev": "npx lerna run start:dev --scope @solidary-chain/server-graphql --stream",
    "pkg:graphql:debug": "npx lerna run start:debug --scope @solidary-chain/server-graphql --stream",
    "pkg:graphql:dev:network": "npx lerna run start:dev:network --scope @solidary-chain/server-graphql --stream",
    "pkg:graphql:debug:network": "npx lerna run start:debug:network --scope @solidary-chain/server-graphql --stream",
    "pkg:react:start": "npx lerna run start --scope @solidary-chain/frontend-react --stream",
    "pkg:react:gen-graphql:watch": "npx lerna run gen:graphql:watch --scope @solidary-chain/frontend-react --stream",
    "pkg:graphql:docker:build": "docker build -t solidarychain/solidarychain-server-graphql -f packages/server-graphql/Dockerfile .",
    "===================INTERNALS===================": "===================NO NEED TO CALL THEM DIRECTLY===================",
    "lerna:install": "lerna bootstrap",
    "lerna:build": "lerna run build",
    "cc:package": "f() { npm run lerna:build; chaincode-manager --update --config ./chaincode.config.json --output ./chaincode-$1 package; npm run copy:indexes -- $1; }; f",
    "cc:install": "f() { hurl install $1 node -P ./chaincode-$1; }; f",
    "cc:install:debug": "f() { hurl install $1 node -P ./chaincode-$1 --debug; }; f",
    "lerna:test": "lerna exec npm run test",
    "copy:indexes": "f () { mkdir -p ./chaincode-$1/META-INF/statedb/couchdb/indexes; cp -a ./couchdb/indexes/ ./chaincode-$1/META-INF/statedb/couchdb/indexes; }; f"
  },
  "devDependencies": {
    "@worldsibu/convector-adapter-mock": "^1.3.8",
    "@worldsibu/convector-platform-fabric": "^1.3.8",
    "@worldsibu/hurley": "^1.1.5",
    "fabric-ca-client": "1.4.7",
    "fabric-client": "1.4.7",
    "lerna": "6.4.1",
    "npm-run-all": "4.1.5",
    "typescript": "^3.8.3"
  },
  "dependencies": {
    "@apollo/link-error": "^2.0.0-beta.3",
    "apollo-link-error": "^1.1.13",
    "x509": "^0.3.4"
  }
}
